{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# Swag\r\n\r\nSwag is a growing collection of helpers for [Handlebars.js](https://github.com/wycats/handlebars.js/).\r\n\r\n## Usage\r\n\r\n    <script src=\"../path_to/handlebars.js\"></script>\r\n    <script src=\"../path_to/swag.js\"></script>    \r\n\r\n## Strings\r\n\r\n#### lowercase\r\n\r\nTurns a string to lowercase.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    {{lowercase \"BENDER SHOULD NOT BE ALLOWED ON TV\"}}\r\n\r\n    bender should not be allowed on tv\r\n\r\n#### uppercase\r\n\r\nTurns a string to uppercase. Opposite of `{{lowercase}}`.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    {{uppercase \"bender should not be allowed on tv\"}}\r\n\r\n    BENDER SHOULD NOT BE ALLOWED ON TV\r\n\r\n#### capitalizeFirst\r\n\r\nCapitalizes the firs word in a string.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    {{capitalizeFirst \"bender should not be allowed on TV\"}}\r\n\r\n    Bender should not be allowed on TV\r\n\r\n#### capitalizeEach\r\n\r\nCapitalizes each word in a string.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    {{capitalizeEach \"bender should NOT be allowed on TV\"}}\r\n\r\n    Bender Should NOT Be Allowed On TV\r\n\r\n#### titleize\r\n\r\nCapitalizes all words within a string. Taken from the templating library [Walrus](https://github.com/jeremyruppel/walrus) by [Jeremy Ruppel](https://github.com/jeremyruppel).\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    {{titleize \"Bender-should-Not-be-allowed_on_Tv.\"}}\r\n\r\n    Bender Should Not Be Allowed On Tv.\r\n\r\n#### sentence\r\n\r\nCapitalizes the first word of each sentence in a string and converts the rest of the sentence to lowercase.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    {{capitalizeEach \"bender should NOT be allowed on TV. fry SHOULD be allowed on TV.\"}}\r\n\r\n    Bender should not be allowed on tv. Fry should be allowed on tv.\r\n\r\n#### reverse\r\n\r\nReverses a string.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    {{reverse \"bender should NOT be allowed on TV.\"}}\r\n\r\n    .VT no dewolla eb TON dluohs redneb\r\n\r\n#### truncate\r\n\r\nTruncates a string given a specified `length`, providing a custom string to denote an `omission`.\r\n\r\nParameters:\r\n\r\n    length [int] - The number of characters to keep (Required)\r\n    omission [string] - A string to denote an omission (Optional)\r\n\r\nUsage:\r\n\r\n    {{truncate \"Bender should not be allowed on tv.\" 31 \"...\"}}\r\n\r\n    Bender should not be allowed...\r\n\r\n#### center\r\n\r\nCenters a string using non-breaking spaces.\r\n\r\nParameters:\r\n\r\n    spaces [int] - The number of spaces. (Required)\r\n\r\nUsage:\r\n\r\n    {{center \"Bender should not be allowed on tv.\" 10}}\r\n\r\n              Bender should not be allowed on tv.\r\n\r\n## Collections\r\n\r\n#### first\r\n\r\nReturns the first item in a collection.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\r\n\r\n    {{first collection}}\r\n\r\n    Amy Wong\r\n\r\n#### withFirst\r\n\r\nUse the first item in a collection inside a block.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\r\n\r\n    {{#withFirst collection}}\r\n        <p>{{this}} is smart.</p>\r\n    {{/withFirst}}\r\n\r\n    <p>Amy Wong is smart.</p>\r\n\r\n#### last\r\n\r\nReturns the last item in a collection. Opposite of `first`.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\r\n\r\n    {{last collection}}\r\n\r\n    Scruffy\r\n\r\n#### withLast\r\n\r\nUse the last item in a collection inside a block. Opposite of `withFirst`.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\r\n\r\n    {{#withLast collection}}\r\n        <p>{{this}} is lazy.</p>\r\n    {{/withLast}}\r\n\r\n    <p>Scruffy is lazy.</p>\r\n\r\n#### after\r\n\r\nReturns all of the items in the collection after the specified count.\r\n\r\nParameters:\r\n\r\n    count [int] - How many items to omit from the beginning. (Required)\r\n\r\nUsage:\r\n\r\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\r\n\r\n    {{after collection 5}}\r\n\r\n    Leela, Professor Farnsworth, Scruffy\r\n\r\n#### withAfter\r\n\r\nUse all of the items in the collection after the specified count inside a block.\r\n\r\nParameters:\r\n\r\n    count [int] - How many items to omit from the beginning. (Required)\r\n\r\nUsage:\r\n\r\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\r\n\r\n    {{#withAfter collection 5}}\r\n        {{titleize this}}\r\n    {{/withAfter}}\r\n\r\n    Leela Professor Farnsworth Scruffy\r\n\r\n#### before\r\n\r\nReturns all of the items in the collection before the specified count. Opposite of `after`.\r\n\r\nParameters:\r\n\r\n    count [int] - How many items to omit from the end. (Required)\r\n\r\nUsage:\r\n\r\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\r\n\r\n    {{before collection 5}}\r\n\r\n    Amy Wong, Bender, Dr. Zoidberg\r\n\r\n#### withBefore\r\n\r\nUse all of the items in the collection before the specified count inside a block. Opposite of `withAfter`.\r\n\r\nParameters:\r\n\r\n    count [int] - How many items to omit from the end. (Required)\r\n\r\nUsage:\r\n\r\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\r\n\r\n    {{#withBefore collection 5}}\r\n        {{reverse this}}\r\n    {{/withBefore}}\r\n\r\n    gnoW ymA redneB grebdioZ .rD\r\n\r\n#### join\r\n\r\nJoins all elements of a collection into a string using a separator if specified.\r\n\r\nParameters:\r\n\r\n    separator [string] - A string to use as a separator between the items. (Optional)\r\n\r\nUsage:\r\n\r\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\r\n\r\n    {{join collection \" & \"}}\r\n\r\n    Amy Wong & Bender & Dr. Zoidberg & Fry & Hermes Conrad & Leela & Professor Farnsworth & Scruffy\r\n\r\n#### sort\r\n\r\nReturns the collection sorted.\r\n\r\nParameters:\r\n\r\n    field [string] - String name of the field or property to sort by. (Optional)\r\n\r\nUsage:\r\n\r\n    collection = ['Dr. Zoidberg', 'Fry', 'Amy Wong', 'Professor Farnsworth', 'Bender', 'Hermes Conrad', 'Leela', 'Scruffy']\r\n\r\n    {{sort collection}}\r\n\r\n    Amy Wong, Bender, Dr. Zoidberg, Fry, Hermes Conrad, Leela, Professor Farnsworth, Scruffy\r\n\r\n#### withSort\r\n\r\nUses the sorted collection inside the block.\r\n\r\nParameters:\r\n\r\n    field [string] - String name of the field or property to sort by. (Optional)\r\n\r\nUsage:\r\n\r\n    collection = [\r\n            name: 'Leela'\r\n            deliveries: 8021\r\n        ,\r\n            name: 'Bender'\r\n            deliveries: 239\r\n        ,\r\n            name: 'Fry'\r\n            deliveries: -12\r\n    ]\r\n\r\n    {{#withSort collection \"deliveries\"}}\r\n        {{name}}: {{deliveries}} <br>\r\n    {{/withSort}}\r\n\r\n    Fry: -12\r\n    Bender: 239\r\n    Leela: 8021\r\n\r\n#### length\r\n\r\nReturns the length of the collection.\r\n\r\nParameters: none.\r\n\r\n    collection = ['Dr. Zoidberg', 'Fry', 'Amy Wong', 'Professor Farnsworth', 'Bender', 'Hermes Conrad', 'Leela', 'Scruffy']\r\n\r\n    {{length collection}}\r\n\r\n    8\r\n\r\n#### lengthEqual\r\n\r\nConditionally render a block based on the length of a collection.\r\n\r\nParameters:\r\n\r\n    length [int] - The value to test against. (Required)\r\n\r\nUsage:\r\n\r\n    collection = [\r\n            name: 'Leela'\r\n            deliveries: 8021\r\n        ,\r\n            name: 'Bender'\r\n            deliveries: 239\r\n        ,\r\n            name: 'Fry'\r\n            deliveries: -12\r\n    ]\r\n\r\n\r\n    {{#lengthEqual collection 3}}\r\n        There are 3 people in Planet Express.\r\n    {{else}}\r\n        This is not Planet Express.\r\n    {{/lengthEqual}}\r\n\r\n    There are 3 people in Planet Express.\r\n\r\n### empty\r\n\r\nConditionally render a block if the collection is empty.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    collection = []\r\n\r\n    {{#empty collection}}\r\n        Good news everyone!\r\n    {{else}}\r\n        Bad news everyone!\r\n    {{/empty}}\r\n\r\n    Good news everyone!\r\n\r\n### any\r\n\r\nConditionally render a block if the collection isn't empty. Opposite of `empty`\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    collection = ['Professor Farnsworth']\r\n\r\n    {{#any collection}}\r\n        Good news everyone!\r\n    {{else}}\r\n        Bad news everyone!\r\n    {{/any}}\r\n\r\n    Good news everyone!\r\n\r\n### inArray\r\n\r\nConditionally render a block if a specified value is in the collection.\r\n\r\nParameters:\r\n\r\n    value [string|int] - A value to test against. (Required)\r\n\r\nUsage:\r\n\r\n    collection = ['Professor Farnsworth', 'Fry', 'Bender']\r\n\r\n    {{#inArray collection \"Fry\"}}\r\n        I'm walking on sunshine!\r\n    {{else}}\r\n        I'm walking on darkness.\r\n    {{/any}}\r\n\r\n    I'm walking on sunshine!\r\n\r\n## Math\r\n\r\n#### add\r\n\r\nReturns the sum of two numbers.\r\n\r\nParameters:\r\n\r\n    value [int] - The number to add to the expression. (Required)\r\n\r\nUsage:\r\n\r\n    value = 5\r\n\r\n    {{add value 5}}\r\n\r\n    10\r\n\r\n#### subtract\r\n\r\nReturns the difference of two numbers. Opposite of `add`\r\n\r\nParameters:\r\n\r\n    value [int] - The number to subtract from the expression. (Required)\r\n\r\nUsage:\r\n\r\n    value = 5\r\n\r\n    {{subtract value 5}}\r\n\r\n    0\r\n\r\n#### divide\r\n\r\nReturns the division of two numbers.\r\n\r\nParameters:\r\n\r\n    value [int] - The number to divide the expression. (Required)\r\n\r\nUsage:\r\n\r\n    value = 5\r\n\r\n    {{divide value 5}}\r\n\r\n    1\r\n\r\n#### multiply\r\n\r\nReturns the multiplication of two numbers.\r\n\r\nParameters:\r\n\r\n    value [int] - The number to multiply the expression. (Required)\r\n\r\nUsage:\r\n\r\n    value = 5\r\n\r\n    {{multiply value 5}}\r\n\r\n    25\r\n\r\n#### floor\r\n\r\nReturns the value rounded down to the nearest integer.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    value = 5.6\r\n\r\n    {{floor value}}\r\n\r\n    5\r\n\r\n#### ceil\r\n\r\nReturns the value rounded up to the nearest integer.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    value = 5.6\r\n\r\n    {{ceil value}}\r\n\r\n    6\r\n\r\n#### round\r\n\r\nReturns the value rounded to the nearest integer.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    value = 5.69\r\n\r\n    {{round value}}\r\n\r\n    6\r\n\r\n## Comparisons\r\n\r\n#### equal\r\n\r\nConditionally render a block if the condition is true.\r\n\r\nParameters:\r\n\r\n    value [string|int] - the value to test against.\r\n\r\nUsage:\r\n\r\n    number = 5\r\n\r\n    {{#equal number 5}}\r\n        Kiss my shiny metal ass!\r\n    {{else}}\r\n        Never mind :(\r\n    {{/equal}}\r\n\r\n    Kiss my shiny metal ass!\r\n\r\n#### notEqual\r\n\r\nConditionally render a block if the condition is false. Opposite of `equal`.\r\n\r\nParameters:\r\n\r\n    value [string|int] - the value to test against.\r\n\r\nUsage:\r\n\r\n    number = 5\r\n\r\n    {{#notEqual number 5}}\r\n        Kiss my shiny metal ass!\r\n    {{else}}\r\n        Never mind :(\r\n    {{/notEqual}}\r\n\r\n    Never mind :(\r\n\r\n#### gt\r\n\r\nConditionally render a block if the value is greater than a given number.\r\n\r\nParameters:\r\n\r\n    value [string|int] - the value to test against.\r\n\r\nUsage:\r\n\r\n    number = 5\r\n\r\n    {{#gt number 8}}\r\n        Kiss my shiny metal ass!\r\n    {{else}}\r\n        Never mind :(\r\n    {{/gt}}\r\n\r\n    Never mind :(\r\n\r\n#### gte\r\n\r\nConditionally render a block if the value is greater or equal than a given number.\r\n\r\nParameters:\r\n\r\n    value [string|int] - the value to test against.\r\n\r\nUsage:\r\n\r\n    number = 5\r\n\r\n    {{#gte number 5}}\r\n        Kiss my shiny metal ass!\r\n    {{else}}\r\n        Never mind :(\r\n    {{/gte}}\r\n\r\n    Kiss my shiny metal ass!\r\n\r\n#### lt\r\n\r\nConditionally render a block if the value is less than a given number. Opposite of `gt`.\r\n\r\nParameters:\r\n\r\n    value [string|int] - the value to test against.\r\n\r\nUsage:\r\n\r\n    number = 5\r\n\r\n    {{#lt number 3}}\r\n        Kiss my shiny metal ass!\r\n    {{else}}\r\n        Never mind :(\r\n    {{/lt}}\r\n\r\n    Never mind :(\r\n\r\n#### lte\r\n\r\nConditionally render a block if the value is less or equal than a given number. Opposite of `gte`.\r\n\r\nParameters:\r\n\r\n    value [string|int] - the value to test against.\r\n\r\nUsage:\r\n\r\n    number = 5\r\n\r\n    {{#lte number 5}}\r\n        Kiss my shiny metal ass!\r\n    {{else}}\r\n        Never mind :(\r\n    {{/lte}}\r\n\r\n    Kiss my shiny metal ass!\r\n\r\n## Dates\r\n\r\n#### formatDate\r\n\r\nFormats a date into a string given a format. Accepts any value that can be passed to `new Date()`. This helper is a port of the [formatDate-js](http://https://github.com/michaelbaldry/formatDate-js) library by [Michael Baldry](https://github.com/michaelbaldry).\r\n\r\nParameters:\r\n\r\n    format [string] - The format string, according to these tokens: (http://www.ruby-doc.org/core-1.9.3/Time.html#method-i-strftime) (Required)\r\n\r\nUsage:\r\n\r\n    date = new Date()\r\n\r\n    {{formatDate date \"%m/%d/%Y\"}}\r\n    {{formatDate date \"%I:%M%p\"}}\r\n    {{formatDate date \"%F\"}}\r\n    {{formatDate date \"%Y%m%dT%H%M%S%z\"}}\r\n\r\n    07/26/2012\r\n    11:38PM\r\n    2012-07-26\r\n    20120726T233805-0004\r\n\r\n#### now\r\n\r\nReturns the current date.\r\n\r\nParameters:\r\n\r\n    format [string] - The format string, according to these tokens: http://www.ruby-doc.org/core-1.9.3/Time.html#method-i-strftime (Optional)\r\n\r\nUsage:\r\n\r\n    {{now}}\r\n    {{now \"%m/%d/%Y\"}}\r\n\r\n    Thu Jul 26 2012 23:41:02 GMT-0400 (AST)\r\n    07/26/2012\r\n\r\n#### timeago\r\n\r\nReturns a human-readable time phrase from the given date.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    date = 'Thu Jul 22 2012 23:41:02 GMT-0400 (AST)'\r\n\r\n    {{timeago date}}\r\n\r\n    4 days ago\r\n\r\n## Inflections\r\n\r\n#### inflect\r\n\r\nReturns the plural or singular form of a word based on a count.\r\n\r\nParameters:\r\n\r\n    singular [string] - The singular form of the word. (Required)\r\n    plural [string] - The plural form of the word. (Required)\r\n    include [boolean] - whether or not to include the count before the word. (Optional)\r\n\r\nUsage:\r\n\r\n    enemies = 0\r\n    friends = 1\r\n\r\n    {{inflect enemies \"enemy\" \"enemies\"}}\r\n    {{inflect friends \"friend\" \"friends\" true}}\r\n\r\n    enemies\r\n    1 friend\r\n\r\n#### ordinalize\r\n\r\nTurns a number into an ordinal string. Taken from the templating library [Walrus](https://github.com/jeremyruppel/walrus) by [Jeremy Ruppel](https://github.com/jeremyruppel).\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    {{ordinalize 3}}\r\n    {{ordinalize 1}}\r\n    {{ordinalize 22}}\r\n\r\n    3rd\r\n    1st\r\n    22nd\r\n\r\n## HTML\r\n\r\n#### ul\r\n\r\nCreates an unordered list.\r\n\r\nParameters:\r\n\r\n    hash [html attributes] - HTML attributes to use on the ul element. (Optional)\r\n\r\nUsage:\r\n\r\n    collection = [\r\n            name: 'Leela'\r\n            deliveries: 8021\r\n        ,\r\n            name: 'Bender'\r\n            deliveries: 239\r\n        ,\r\n            name: 'Fry'\r\n            deliveries: 1\r\n    ]\r\n\r\n    {{#ul collection class=\"deliveries-list\"}}\r\n        {{name}} - {{inflect deliveries \"delivery\" \"deliveries\" true}}\r\n    {{/ul}}\r\n\r\n    <ul class=\"deliveries-list\">\r\n        <li>\r\n            Leela - 8021 deliveries\r\n        </li>\r\n        <li>\r\n            Bender - 239 deliveries\r\n        </li>\r\n        <li>\r\n            Fry - 1 delivery\r\n        </li>\r\n    </ul>\r\n\r\n#### ol\r\n\r\nSame as the `ul` helper but creates and ordered list.\r\n\r\n#### br\r\n\r\nReturns `<br>` tags based on a count.\r\n\r\nParameters:\r\n\r\n    count [int] - The number of `br` elements to render. (Optional)\r\n\r\nUsage:\r\n\r\n    {{br 5}}\r\n\r\n    <br><br><br><br><br>\r\n\r\n## Logging\r\n\r\n#### log\r\n\r\nSimple console.log()\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    {{log \"Hi console :)\"}}\r\n\r\n    Hi console :)\r\n\r\n#### debug\r\n\r\nSimple console.debug() that shows the current context.\r\n\r\nParameters: none.\r\n\r\nUsage:\r\n\r\n    collection = [\r\n            name: 'Leela'\r\n            deliveries: 8021\r\n        ,\r\n            name: 'Bender'\r\n            deliveries: 239\r\n        ,\r\n            name: 'Fry'\r\n            deliveries: 1\r\n    ]\r\n\r\n    {{#withFirst collection}}\r\n        {{debug name}}\r\n    {{/withFirst}}\r\n\r\n    Context: { deliveries: 8021, name: \"Leela\" }\r\n    Value: Leela\r\n    -----------------------------------------------\r\n\r\n## Miscellaneous\r\n\r\n#### default\r\n\r\nProvides a default or fallback value if a value doesn't exist.\r\n\r\nParameters:\r\n\r\n    defaultValue [string|int] - The default value to use.\r\n\r\nUsage:\r\n\r\n    title = ''\r\n\r\n    {{default title \"Not title available.\"}}\r\n\r\n    Not title available.\r\n\r\n#### partial\r\n\r\nProvides an easy way to register and use partials inside your templates. This helper only works if you define your templates as common.js modules, since it uses the common.js `require` function to find and register your templates with `Handlebars.registerPartial`. It was created with [brunch](http://brunch.io) in mind (which I use a lot), because brunch automatically wraps your scripts and templates in common.js modules to use in the browser.\r\n\r\nParameters:\r\n\r\n    name [string] - The name or path of the file in which your template is define. You can tell swag where your templates folder is by overriding Swag.Config.partialsPath. (Required)\r\n\r\n    data [int|string|collection] - The data you want to use inside the partial. (Optional)\r\n\r\nUsage:\r\n\r\n    # path to your templates from where yo override Swag.Config.partialsPath\r\n    Swag.Config.partialsPath = '../views/templates/'\r\n\r\n    collection = ['Professor Farnsworth', 'Fry', 'Bender']\r\n\r\n    # Your Partial (planet_express.hbs)\r\n    {{sort this}}\r\n\r\n    # Your template\r\n    <p>\r\n        {{partial \"planet_express\" collection}}\r\n    </p>\r\n\r\n    <p>Bender, Fry, Professor Farnsworth</p>\r\n\r\n","name":"Swag","tagline":"Give your handlebars.js templates some swag son!","google":""}